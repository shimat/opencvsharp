version: '4.3.0-{build}'

#environment:
#  APPVEYOR_SAVE_CACHE_ON_ERROR: false
#  VCPKG_BUILD_TYPE: Release

init:
- ps: |
    Write-Host "APPVEYOR_BUILD_VERSION = "$env:APPVEYOR_BUILD_VERSION
    if ($isWindows) {
        $version = $env:APPVEYOR_BUILD_VERSION.Split('-')[0]
        Write-Host "version = "$version
        $date = Get-Date -Format "yyyyMMdd"
        Update-AppveyorBuild -Version "$version.$date-beta$env:APPVEYOR_BUILD_NUMBER"
        Write-Host "APPVEYOR_BUILD_VERSION = "$env:APPVEYOR_BUILD_VERSION
    }
    iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    Write-Host "APPVEYOR = "$env:APPVEYOR
    Write-Host "CI = "$env:CI
    Write-Host "APPVEYOR_API_URL = "$env:APPVEYOR_API_URL
    Write-Host "APPVEYOR_ACCOUNT_NAME = "$env:APPVEYOR_ACCOUNT_NAME
    Write-Host "APPVEYOR_PROJECT_ID = "$env:APPVEYOR_PROJECT_ID
    Write-Host "APPVEYOR_PROJECT_NAME = "$env:APPVEYOR_PROJECT_NAME
    Write-Host "APPVEYOR_PROJECT_SLUG = "$env:APPVEYOR_PROJECT_SLUG
    Write-Host "APPVEYOR_BUILD_FOLDER = "$env:APPVEYOR_BUILD_FOLDER
    Write-Host "APPVEYOR_BUILD_ID = "$env:APPVEYOR_BUILD_ID
    Write-Host "APPVEYOR_BUILD_NUMBER = "$env:APPVEYOR_BUILD_NUMBER
    Write-Host "APPVEYOR_BUILD_VERSION = "$env:APPVEYOR_BUILD_VERSION
    Write-Host "APPVEYOR_BUILD_WORKER_IMAGE = "$env:APPVEYOR_BUILD_WORKER_IMAGE
    Write-Host "APPVEYOR_PULL_REQUEST_NUMBER = "$env:APPVEYOR_PULL_REQUEST_NUMBER
    Write-Host "APPVEYOR_PULL_REQUEST_TITLE = "$env:APPVEYOR_PULL_REQUEST_TITLE
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME = "$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_NAME
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH = "$env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH
    Write-Host "APPVEYOR_PULL_REQUEST_HEAD_COMMIT = "$env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT
    Write-Host "APPVEYOR_JOB_ID = "$env:APPVEYOR_JOB_ID
    Write-Host "APPVEYOR_JOB_NAME = "$env:APPVEYOR_JOB_NAME
    Write-Host "APPVEYOR_JOB_NUMBER = "$env:APPVEYOR_JOB_NUMBER
    Write-Host "APPVEYOR_REPO_PROVIDER = "$env:APPVEYOR_REPO_PROVIDER
    Write-Host "APPVEYOR_REPO_SCM = "$env:APPVEYOR_REPO_SCM
    Write-Host "APPVEYOR_REPO_NAME = "$env:APPVEYOR_REPO_NAME
    Write-Host "APPVEYOR_REPO_BRANCH = "$env:APPVEYOR_REPO_BRANCH
    Write-Host "APPVEYOR_REPO_TAG = "$env:APPVEYOR_REPO_TAG
    Write-Host "APPVEYOR_REPO_TAG_NAME = "$env:APPVEYOR_REPO_TAG_NAME
    Write-Host "APPVEYOR_REPO_COMMIT = "$env:APPVEYOR_REPO_COMMIT
    Write-Host "APPVEYOR_REPO_COMMIT_AUTHOR = "$env:APPVEYOR_REPO_COMMIT_AUTHOR
    Write-Host "APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL = "$env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL
    Write-Host "APPVEYOR_REPO_COMMIT_TIMESTAMP = "$env:APPVEYOR_REPO_COMMIT_TIMESTAMP
    Write-Host "APPVEYOR_REPO_COMMIT_MESSAGE = "$env:APPVEYOR_REPO_COMMIT_MESSAGE
    Write-Host "APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED = "$env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED
    Write-Host "APPVEYOR_SCHEDULED_BUILD = "$env:APPVEYOR_SCHEDULED_BUILD
    Write-Host "PLATFORM = "$env:PLATFORM
    Write-Host "CONFIGURATION = "$env:CONFIGURATION
    Write-Host "APPVEYOR_SAVE_CACHE_ON_ERROR = "$env:APPVEYOR_SAVE_CACHE_ON_ERROR

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

image: 
  - Visual Studio 2019

configuration: Release

cache: 
  - C:\projects\opencvsharp\test\OpenCvSharp.Tests\bin\Release\net472\_data
  - C:\projects\opencvsharp\test\OpenCvSharp.Tests\bin\Release\netcoreapp2.2\_data
#  - C:\tools\vcpkg\installed\
#  - packages -> **\packages.config

before_build:
#  - cmd: git submodule update --init --recursive
  - cmd: nuget restore
#  - cmd: vcpkg install tesseract:x64-windows-static tesseract:x86-windows-static
  - ps: |
      Install-WindowsFeature Server-Media-Foundation
      . ".\download_opencv_windows.ps1"

build_script:
  - cmd: msbuild OpenCvSharp.sln /t:build /p:configuration=%CONFIGURATION% /p:platform=x64 -maxcpucount
  - cmd: msbuild OpenCvSharp.sln /t:build /p:configuration=%CONFIGURATION% /p:platform=x86 -maxcpucount
  - cmd: msbuild OpenCvSharp.sln /t:build /p:configuration=%CONFIGURATION% /p:platform=ARM -maxcpucount

after_build:
- ps: |
    (Get-ChildItem $env:APPVEYOR_BUILD_FOLDER -Recurse).Where{ $_.Extension -eq ".nuspec" }.ForEach{
        [xml]$xml = Get-Content $_.FullName
        $xml.package.metadata.version = $env:APPVEYOR_BUILD_VERSION
        $xml.Save($_.FullName)
    }

    $windowsNuspec = "${env:APPVEYOR_BUILD_FOLDER}\nuget\OpenCvSharp4.Windows.nuspec"
    [xml]$xml = Get-Content $windowsNuspec
    foreach ($group in $xml.package.metadata.dependencies.ChildNodes){
        foreach ($dependency in $group.ChildNodes){
            Write-Host "before: " $dependency.GetAttribute("id") "=" $dependency.GetAttribute("version")
            $dependency.SetAttribute("version", $env:APPVEYOR_BUILD_VERSION)
            Write-Host "after:  " $dependency.GetAttribute("id") "=" $dependency.GetAttribute("version")
            $xml.Save($windowsNuspec)
        }
    }

    nuget pack nuget/OpenCvSharp4.nuspec -OutputDirectory artifacts -Symbols -SymbolPackageFormat snupkg
    nuget pack nuget/OpenCvSharp4.Windows.nuspec -OutputDirectory artifacts
    nuget pack nuget/OpenCvSharp4.runtime.win.nuspec -OutputDirectory artifacts
    nuget pack nuget/OpenCvSharp4.runtime.uwp.nuspec -OutputDirectory artifacts


test_script:
- cmd: cd %APPVEYOR_BUILD_FOLDER%
- cmd: cd test
- cmd: cd OpenCvSharp.Tests
- cmd: dotnet test -c Release -f net48 --runtime win-x64 #--no-build
- cmd: cd %APPVEYOR_BUILD_FOLDER%

artifacts:
  - path: artifacts\**\*.*

deploy:
- provider: NuGet # appveyor
  server: https://ci.appveyor.com/nuget/shimat
  api_key:
    secure: PW0F7tbGr+QLuLPUGy+32pNtMZUJeqjyikz9nKlpALA=
  skip_symbols: true
  artifact: /.*\.nupkg/

#- provider: NuGet # nuget.org
#  api_key:
#    secure: qea/3lnas374qyS4Xw9t5Z5jBKsVsBPGsY938QHgJ2IQyrQmug0qPKDU7tll/QkJ
#  skip_symbols: true
#  artifact: /.*\.nupkg/
